/*#############################################################################
PROGRAM

Test the loop execution

various loop statments are executed. The loop are doing some calulations.
At the end, the calucaltion result must match the expected value.

The target of the tests are the correct treatment of 
initial- final- and step-value.

#############################################################################*/

MODULE(for);

PROBLEM;
    Loop: TASK  MAIN;
        DCL sum FIXED(31);
        DCL ok FIXED INIT (1);

        ! test 1  
        sum := 0;
        FOR i FROM 1 BY 1 TO 10 REPEAT
          sum := sum + i;
        END;
        IF sum NE 55 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 55  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST1) ***\\n");');
        FIN;

        ! test 2   like test1 but reverse order
        sum := 0;
        FOR i FROM 10 BY -1 TO 1 REPEAT
          sum := sum + i;
        END;
        IF sum NE 55 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 55  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST2) ***\\n");');
        FIN;

        ! test 3 as test 1 with default start and step  
        sum := 0;
        FOR i TO 10 REPEAT
          sum := sum + i;
        END;
        IF sum NE 55 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 55  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST3) ***\\n");');
        FIN;

        ! test 4 no loop execution, due to start>end and step>0
        sum := 0;
        FOR i FROM 11 TO 10 REPEAT
          sum := sum + i;
        END;
        IF sum NE 0 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 0  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST4) ***\\n");');
        FIN;

        ! test 5 no loop execution, due to start<end and step<0
        sum := 0;
        FOR i FROM 1 BY -1 TO 10 REPEAT
          sum := sum + i;
        END;
        IF sum NE 0 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 0  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST5) ***\\n");');
        FIN;

        ! test 6 run to upper limit of fixed values range
        sum := 0;
        FOR i FROM 1 BY 1 TO 3 REPEAT
          sum := sum + i;
        END;
        IF sum NE 6 THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected 6  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST6) ***\\n");');
        FIN;

        ! test 7 run to lower limit of fixed values range
        sum := 0;
        FOR i FROM 0 BY -1 TO -4 REPEAT
          sum := sum + i;
        END;
        IF sum NE -10  THEN 
         ok = 0;
        __cpp__(
           '   pearlrt::Control::setExitCode(1); '
           '   printf("expected -10  sum=%d\\n*** FAIL ***\\n",_sum.x);'
           '   printf("*** FAILED (TEST7) ***\\n");');
        FIN;

       IF ok == 1 THEN
__cpp__('   pearlrt::Control::setExitCode(0); '
        '   printf("*** SUCCESS ***\\n");');
       FIN;
    END;
MODEND;

