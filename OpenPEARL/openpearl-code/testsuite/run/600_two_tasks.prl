/*#########################################################################
PROGRAM
The Main Task increments a variable (varTask1)  and activate Task 2 with a 
higher Prio. The Task2 repressed the main task and increment the variable
varTask2 and go to the end. After this the main task activate task2 again,
but this time with a lower priority. The task2 starts until the main task
go sleep for 1 sec. Task2 increments teh variable 2 varTask2 again.
The main task come back and check the varibales and set the ExitCode.
###########################################################################
RESULT 
varTask1 variable must have the value 1, varTask2 the value 2 and
the check varibale also the value 2.  
##########################################################################*/

MODULE(twoTasks);

PROBLEM;

DCL varTask2 FIXED(3) INIT(0);
    
Task1: TASK PRIO 3 MAIN;
	__cpp__('pearlrt::Control::setExitCode(1); ');
	DCL (varTask1,check) FIXED(3) INIT(0,0);

	varTask1 := varTask1 + 1;
	
	ACTIVATE Task2 PRIO 2;
    
	__cpp__(
	'if (_varTask2.x == 1) {');
		check := check + 1;
	__cpp__('}');

	ACTIVATE Task2;

	__cpp__(
	'if (_varTask2.x == 1) {');
		check := check + 1;
	__cpp__('}');

	AFTER 1 SEC RESUME;
    
    __cpp__('if(_varTask2.x == 2 && _varTask1.x == 1 && _check.x == 2) {'
            '   pearlrt::Control::setExitCode(0);'
            '   printf("*** SUCCESS *** \\n"); '
            '}else {'
            '   printf ("*** FAILED ***\\n");'
            '   pearlrt::Control::setExitCode(1);} ');
            
	
END;

Task2: TASK PRIO 4;
	
    varTask2 := varTask2 + 1;	
END;


MODEND;
