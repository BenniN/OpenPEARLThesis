MODULE(char_dcl);

PROBLEM;

DCL c CHAR;
DCL x4a CHARACTER(4);
DCL x4 CHAR(4);
DCL y4 CHAR(4) INIT('ABCD');
!DCL control CHAR(4) INIT(''\1B\'ABC'); ! should produce "\033ABC"
DCL control1 CHAR(14) INIT('A '\1B\' BC'); ! should produce "A \033 BC"
DCL control11 CHAR(14) INIT('A '\1B        \' BC'); ! should produce "A \033 BC"
DCL control12 CHAR(14) INIT('A '\1B
       \' BC'); ! should produce "A \033 BC"

DCL control13 CHAR(4) INIT(''\ 1B
\'ABC'); ! should produce "\033ABC"

DCL charWithDoubleQuote CHAR(10) INIT('abc"de');

! the next lines do not compile
DCL control2 CHAR(14) INIT('A '\1B 01\' BC'); ! should produce "A \033\001 BC"
DCL control3 CHAR(14) INIT('A '\1B 01\' BC'); ! should produce "A \033\001 BC"
DCL control4 CHAR(14) INIT('A '\ 1B \' BC'); ! should produce "A \033 BC"
!DCL control6 CHAR(14) INIT('A '\ 1B 12 \' BC'); ! should produce "A \033\022 BC"
DCL control6 CHAR(14) INIT('A '\ 1B
                  12 \' BC'); ! should produce "A \033\022 BC"
DCL x8 CHAR(8);

/*
should compile into:
__cpp__(
    'pearlrt::Character<1>  _c;'
    'pearlrt::Character<4>  _x4a;'
    'pearlrt::Character<4>  _x4;'
    'pearlrt::Character<4>  y4("ABCD");'
    'pearlrt::Character<8>  x8;'
);
*/
! make automatic test happy
t: TASK MAIN;
END;
MODEND;
