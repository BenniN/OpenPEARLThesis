MODULE(bitstring);
! test for compilation of bit deklarations and operations
! for each statement the expected result is given an __cpp__-insertion
! as soon as the compiler is capable to to the translation,
! the comment should be moved to the result line

PROBLEM;

   ! deklarations
    DCL b BIT;
    DCL b1 BIT(1);
    DCL b2 BIT(2);
    DCL b15 BIT(15);
    DCL b32 BIT(32);
    DCL b33 BIT(33);
    DCL b64 BIT(64);

   /* expected code 
   __cpp__("pearlrt::BitString<1>  _b;			");
   __cpp__("pearlrt::BitString<1>  _b1;			");
   __cpp__("pearlrt::BitString<2>  _b2;			");
   __cpp__("pearlrt::BitString<15> _b15;		");
   __cpp__("pearlrt::BitString<32> _b32;		");
   __cpp__("pearlrt::BitString<64> _b64;		");
*/


T1: TASK MAIN;
   __cpp__ (
        "if (sizeof(_b) == sizeof(_b1)) printf(\"BIT == BIT(1): ok\\n\");  "
        "if (sizeof(_b) != sizeof(_b1)) {      "
        "       printf(\"BIT should be BIT(1)\\n\");"
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b1) == 1) printf(\"sizeof(BIT(1): ok\\n\");  "
        "if (sizeof(_b1) != 1) {"
        "       printf(\"sizeof(BIT(1): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b2) == 1) printf(\"sizeof(BIT(2): ok\\n\");  "
        "if (sizeof(_b2) != 1) {"
        "       printf(\"sizeof(BIT(2): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b15) == 2) printf(\"sizeof(BIT(15): ok\\n\");  "
        "if (sizeof(_b15) != 2) {"
        "       printf(\"sizeof(BIT(15): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b32) == 4) printf(\"sizeof(BIT(32): ok\\n\");  "
        "if (sizeof(_b32) != 4) {"
        "       printf(\"sizeof(BIT(32): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b33) == 8) printf(\"sizeof(BIT(33): ok\\n\");  "
        "if (sizeof(_b33) != 8) {"
        "       printf(\"sizeof(BIT(33): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
        "if (sizeof(_b64) == 8) printf(\"sizeof(BIT(64): ok\\n\");  "
        "if (sizeof(_b64) != 8) {"
        "       printf(\"sizeof(BIT(64): fail\\n\");       "
        "       pearlrt::Control::setExitCode(1);       "
        "} "
	);
END;

MODEND;

